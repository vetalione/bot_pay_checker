#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import re

# Read the file
with open('src/index.ts', 'r', encoding='utf-8') as f:
    content = f.read()

# 1. Update config to include UAH payment details
config_pattern = r"(const config = \{[^}]+cardNumber: process\.env\.CARD_NUMBER \|\| '',)"
config_replacement = r"\1\n  paymentAmountUAH: parseInt(process.env.PAYMENT_AMOUNT_UAH || '1050'),\n  cardNumberUAH: process.env.CARD_NUMBER_UAH || '5169155124283993',"

content = re.sub(config_pattern, config_replacement, content)

# 2. Update UserState type to include currency
state_type_pattern = r"(type UserState = \{[^}]+videosSent\?: boolean;)"
state_type_replacement = r"\1\n  currency?: 'RUB' | 'UAH';"

content = re.sub(state_type_pattern, state_type_replacement, content)

# 3. Replace single button with two currency buttons
old_button_text = "Markup.button.callback('üí∞ –û–ø–ª–∞—Ç–∏—Ç—å –¥–æ—Å—Ç—É–ø', 'pay_access')"
new_buttons_text = """Markup.button.callback('üíµ –û–ø–ª–∞—Ç–∏—Ç—å —Ä—É–±–ª—è–º–∏ (2000 ‚ÇΩ)', 'pay_rub')],
      [Markup.button.callback('üí¥ –û–ø–ª–∞—Ç–∏—Ç—å –≥—Ä–∏–≤–Ω–∞–º–∏ (1050 ‚Ç¥)', 'pay_uah')"""

content = content.replace(old_button_text, new_buttons_text)

# 4. Replace pay_access with pay_rub
content = content.replace("bot.action('pay_access'", "bot.action('pay_rub'")
content = content.replace("// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ \"–û–ø–ª–∞—Ç–∏—Ç—å –¥–æ—Å—Ç—É–ø\"", "// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ \"–û–ø–ª–∞—Ç–∏—Ç—å —Ä—É–±–ª—è–º–∏\"")

# 5. Add currency to RUB state
old_rub_state = "  state.step = 'waiting_receipt';\n  userStates.set(userId, state);"
new_rub_state = "  state.step = 'waiting_receipt';\n  state.currency = 'RUB';\n  userStates.set(userId, state);"

content = content.replace(old_rub_state, new_rub_state)

# 6. Add UAH payment action - find where to insert it
# Insert after the pay_rub action closes (after its closing });)
insertion_marker = "  await ctx.reply(\n    'üí¨ –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ —Å –æ–ø–ª–∞—Ç–æ–π:',\n    Markup.inlineKeyboard([\n      [Markup.button.url('üì® –°–≤—è–∑–∞—Ç—å—Å—è —Å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º', 'https://t.me/ADA_gii')]\n    ])\n  );\n});"

uah_action = '''

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–û–ø–ª–∞—Ç–∏—Ç—å –≥—Ä–∏–≤–Ω–∞–º–∏"
bot.action('pay_uah', async (ctx) => {
  const userId = ctx.from.id;
  const state = userStates.get(userId) || { step: 'start' };

  await ctx.answerCbQuery();

  state.step = 'waiting_receipt';
  state.currency = 'UAH';
  userStates.set(userId, state);

  // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const formattedCard = config.cardNumberUAH.replace(/(\\d{4})(?=\\d)/g, '$1 ');

  await ctx.reply(
    'üí≥ **–†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã:**\\\\n\\\\n' +
    `üí∞ –°—É–º–º–∞: **${config.paymentAmountUAH} ‚Ç¥**\\\\n` +
    `üè¶ –ö–∞—Ä—Ç–∞: \\\\`${formattedCard}\\\\`\\\\n` +
    'üë§ –ü–æ–ª—É—á–∞—Ç–µ–ª—å: **–ú–∏–∫–∏—Ç–∞—Å—å –Æ–ª—ñ—è –û–ª–µ–∫—Å–∞–Ω–¥—Ä—ñ–≤–Ω–∞**\\\\n\\\\n' +
    'üìã **–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:**\\\\n' +
    '1. –ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ —É–∫–∞–∑–∞–Ω–Ω—É—é —Å—É–º–º—É –Ω–∞ –∫–∞—Ä—Ç—É\\\\n' +
    '2. –°–¥–µ–ª–∞–π—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –∏–ª–∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –ø–ª–∞—Ç–µ–∂–Ω—É—é –∫–≤–∏—Ç–∞–Ω—Ü–∏—é\\\\n' +
    '3. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–≤–∏—Ç–∞–Ω—Ü–∏—é –≤ —ç—Ç–æ—Ç —á–∞—Ç\\\\n\\\\n' +
    '‚ö†Ô∏è **–í–∞–∂–Ω–æ:** –ù–∞ –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤–∏–¥–Ω–∞ —Å—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞ –∏ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã –ø–æ–ª—É—á–∞—Ç–µ–ª—è!\\\\n\\\\n' +
    'üëá –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–≤–∏—Ç–∞–Ω—Ü–∏—é —Å—é–¥–∞',
    { parse_mode: 'Markdown' }
  );

  // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è —Å–≤—è–∑–∏ —Å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º
  await ctx.reply(
    'üí¨ –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ —Å –æ–ø–ª–∞—Ç–æ–π:',
    Markup.inlineKeyboard([
      [Markup.button.url('üì® –°–≤—è–∑–∞—Ç—å—Å—è —Å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º', 'https://t.me/ADA_gii')]
    ])
  );
});'''

content = content.replace(insertion_marker, insertion_marker + uah_action)

# Write back
with open('src/index.ts', 'w', encoding='utf-8') as f:
    f.write(content)

print("‚úÖ UAH payment flow added successfully!")
print("üìù Now updating .env file...")

# Update .env file
try:
    with open('.env', 'r', encoding='utf-8') as f:
        env_content = f.read()
    
    if 'PAYMENT_AMOUNT_UAH' not in env_content:
        env_content += '\n# UAH Payment Settings\n'
        env_content += 'PAYMENT_AMOUNT_UAH=1050\n'
        env_content += 'CARD_NUMBER_UAH=5169155124283993\n'
        
        with open('.env', 'w', encoding='utf-8') as f:
            f.write(env_content)
        print("‚úÖ .env file updated with UAH settings!")
    else:
        print("‚ÑπÔ∏è  UAH settings already in .env file")
except Exception as e:
    print(f"‚ö†Ô∏è  Could not update .env: {e}")
    print("   Please add manually:")
    print("   PAYMENT_AMOUNT_UAH=1050")
    print("   CARD_NUMBER_UAH=5169155124283993")
