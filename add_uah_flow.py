#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import re

# Read the file
with open('src/index.ts', 'r', encoding='utf-8') as f:
    content = f.read()

# 1. Update config to include UAH payment details
config_old = """const config = {
  botToken: process.env.BOT_TOKEN || '',
  channelId: parseInt(process.env.CHANNEL_ID || '0'),
  chatId: parseInt(process.env.CHAT_ID || '0'),
  paymentAmount: parseInt(process.env.PAYMENT_AMOUNT || '2000'),
  cardNumber: process.env.CARD_NUMBER || '',"""

config_new = """const config = {
  botToken: process.env.BOT_TOKEN || '',
  channelId: parseInt(process.env.CHANNEL_ID || '0'),
  chatId: parseInt(process.env.CHAT_ID || '0'),
  paymentAmount: parseInt(process.env.PAYMENT_AMOUNT || '2000'),
  cardNumber: process.env.CARD_NUMBER || '',
  paymentAmountUAH: parseInt(process.env.PAYMENT_AMOUNT_UAH || '1050'),
  cardNumberUAH: process.env.CARD_NUMBER_UAH || '5169155124283993',"""

content = content.replace(config_old, config_new)

# 2. Update UserState type to include currency
state_type_old = """type UserState = {
  step: 'start' | 'waiting_receipt' | 'completed';
  videosSent?: boolean;
};"""

state_type_new = """type UserState = {
  step: 'start' | 'waiting_receipt' | 'completed';
  videosSent?: boolean;
  currency?: 'RUB' | 'UAH';
};"""

content = content.replace(state_type_old, state_type_new)

# 3. Replace single "–û–ø–ª–∞—Ç–∏—Ç—å –¥–æ—Å—Ç—É–ø" button with two currency buttons
old_button = """  await ctx.reply(
    welcomeMessage,
    Markup.keyboard([
      [Markup.button.callback('üí∞ –û–ø–ª–∞—Ç–∏—Ç—å –¥–æ—Å—Ç—É–ø', 'pay_access')],
    ]).resize()
  );"""

new_buttons = """  await ctx.reply(
    welcomeMessage,
    Markup.keyboard([
      [Markup.button.callback('üíµ –û–ø–ª–∞—Ç–∏—Ç—å —Ä—É–±–ª—è–º–∏ (2000 ‚ÇΩ)', 'pay_rub')],
      [Markup.button.callback('üí¥ –û–ø–ª–∞—Ç–∏—Ç—å –≥—Ä–∏–≤–Ω–∞–º–∏ (1050 ‚Ç¥)', 'pay_uah')],
    ]).resize()
  );"""

content = content.replace(old_button, new_buttons)

# 4. Replace the pay_access action with two separate actions
old_action = """// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–û–ø–ª–∞—Ç–∏—Ç—å –¥–æ—Å—Ç—É–ø"
bot.action('pay_access', async (ctx) => {"""

new_action = """// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–û–ø–ª–∞—Ç–∏—Ç—å —Ä—É–±–ª—è–º–∏"
bot.action('pay_rub', async (ctx) => {"""

content = content.replace(old_action, new_action)

# 5. Add currency to state for RUB
old_state_rub = """  state.step = 'waiting_receipt';
  userStates.set(userId, state);

  // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const formattedCard = config.cardNumber.replace(/(\d{4})(?=\d)/g, '$1 ');"""

new_state_rub = """  state.step = 'waiting_receipt';
  state.currency = 'RUB';
  userStates.set(userId, state);

  // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const formattedCard = config.cardNumber.replace(/(\d{4})(?=\d)/g, '$1 ');"""

content = content.replace(old_state_rub, new_state_rub)

# 6. Add new UAH payment action after RUB action
uah_action = """
// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–û–ø–ª–∞—Ç–∏—Ç—å –≥—Ä–∏–≤–Ω–∞–º–∏"
bot.action('pay_uah', async (ctx) => {
  const userId = ctx.from.id;
  const state = userStates.get(userId) || { step: 'start' };

  await ctx.answerCbQuery();

  state.step = 'waiting_receipt';
  state.currency = 'UAH';
  userStates.set(userId, state);

  // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const formattedCard = config.cardNumberUAH.replace(/(\d{4})(?=\d)/g, '$1 ');

  await ctx.reply(
    'üí≥ **–†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã:**\\n\\n' +
    `üí∞ –°—É–º–º–∞: **${config.paymentAmountUAH} ‚Ç¥**\\n` +
    `üè¶ –ö–∞—Ä—Ç–∞: \\`${formattedCard}\\`\\n` +
    'üë§ –ü–æ–ª—É—á–∞—Ç–µ–ª—å: **–ú–∏–∫–∏—Ç–∞—Å—å –Æ–ª—ñ—è –û–ª–µ–∫—Å–∞–Ω–¥—Ä—ñ–≤–Ω–∞**\\n\\n' +
    'üìã **–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:**\\n' +
    '1. –ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ —É–∫–∞–∑–∞–Ω–Ω—É—é —Å—É–º–º—É –Ω–∞ –∫–∞—Ä—Ç—É\\n' +
    '2. –°–¥–µ–ª–∞–π—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –∏–ª–∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –ø–ª–∞—Ç–µ–∂–Ω—É—é –∫–≤–∏—Ç–∞–Ω—Ü–∏—é\\n' +
    '3. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–≤–∏—Ç–∞–Ω—Ü–∏—é –≤ —ç—Ç–æ—Ç —á–∞—Ç\\n\\n' +
    '‚ö†Ô∏è **–í–∞–∂–Ω–æ:** –ù–∞ –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤–∏–¥–Ω–∞ —Å—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞ –∏ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã –ø–æ–ª—É—á–∞—Ç–µ–ª—è!\\n\\n' +
    'üëá –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–≤–∏—Ç–∞–Ω—Ü–∏—é —Å—é–¥–∞',
    { parse_mode: 'Markdown' }
  );

  // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è —Å–≤—è–∑–∏ —Å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º
  await ctx.reply(
    'üí¨ –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ —Å –æ–ø–ª–∞—Ç–æ–π:',
    Markup.inlineKeyboard([
      [Markup.button.url('üì® –°–≤—è–∑–∞—Ç—å—Å—è —Å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º', 'https://t.me/ADA_gii')]
    ])
  );
});
"""

# Insert UAH action after the closing of RUB action (after the first "});")
# Find the position after the assistant button in pay_rub
pattern = r"(\[Markup\.button\.url\('üì® –°–≤—è–∑–∞—Ç—å—Å—è —Å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º', 'https://t\.me/ADA_gii'\)\]\s*\]\s*\)\s*\);\s*}\);\s*\n)"
content = re.sub(pattern, r'\1' + uah_action + '\n', content, count=1)

# Write back
with open('src/index.ts', 'w', encoding='utf-8') as f:
    f.write(content)

print("‚úÖ UAH payment flow added successfully!")
print("üìù Don't forget to update .env file with:")
print("   PAYMENT_AMOUNT_UAH=1050")
print("   CARD_NUMBER_UAH=5169155124283993")
